static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 8888 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/api/v1/" }
                          route:
                            cluster: pad-backend
                            timeout: 0s
                            prefix_rewrite: "/"
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match: { prefix: "/" }
                          route:
                            cluster: frontend
                            timeout: 0s
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        max_age: "1728000"
                        expose_headers: custom-header-1,grpc-status,grpc-message
                http_filters:
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
#                  - name: envoy.filters.http.oauth2
#                    typed_config:
#                      "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
#                      config:
#                        token_endpoint:
#                          cluster: oauth
#                          # Set to the 'token_endpoint' of hydra's openid configuration
#                          #uri: http://127.0.0.1:4444/oauth2/token
#                          uri: http://127.0.0.1:5556/token # # Dex TOKEN endpoint
#                          timeout: 3s
#                        # Set to the "authorization_endpoint" of hydra's openid configuration
#                        #authorization_endpoint: http://127.0.0.1:4444/oauth2/auth
#                        authorization_endpoint: http://127.0.0.1:5556/auth # Dex AUTH endpoint
#                        redirect_uri: "%REQ(x-forwarded-proto)%://%REQ(:authority)%/callback"
#                        redirect_path_matcher:
#                          path:
#                            exact: /callback
#                        signout_path:
#                          path:
#                            exact: /signout
#                        credentials:
#                          #client_id: 0cd694e3-ea49-4b24-97c7-690fddaaef82
#                          #client_id: f58c40ce-be90-4295-bcef-40dbe41fdc44
#                          client_id: pad
#                          token_secret:
#                            name: token
#                          hmac_secret:
#                            name: hmac
#                        forward_bearer_token: true
#                        disable_access_token_set_cookie: false
#                        disable_id_token_set_cookie: false
#                        # (Optional): defaults to 'user' scope if not provided
#                        auth_scopes:
#                          - openid
#                          - email
#                          - profile
#                        auth_type: BASIC_AUTH
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: pad-backend
      connect_timeout: 0.25s
      type: logical_dns
      # HTTP/2 support
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: {}
      lb_policy: round_robin
      # win/mac hosts: Use address: host.docker.internal instead of address: localhost in the line below
      load_assignment:
        cluster_name: cluster_0
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 0.0.0.0
                      port_value: 9090

    - name: frontend
      connect_timeout: 5s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: oauth
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      #port_value: 4173
                      #port_value: 5173
                      port_value: 8000

    - name: oauth
      connect_timeout: 5s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: oauth
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 0.0.0.0
                      port_value: 5556

  secrets:
    - name: token
      generic_secret:
        secret:
          inline_string: testli
    - name: hmac
      generic_secret:
        secret:
          inline_string: asdf
