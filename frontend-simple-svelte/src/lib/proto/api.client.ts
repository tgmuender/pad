// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "api.proto" (package "proto", syntax proto3)
// tslint:disable
import { UserService } from "./api";
import type { UserResponse } from "./api";
import type { Empty } from "./google/protobuf/empty";
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { PetService } from "./api";
import type { Meal } from "./api";
import type { ListMealsRequest } from "./api";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { ListMealsResponse } from "./api";
import type { CreateMealRequest } from "./api";
import type { ListPetsResponse } from "./api";
import type { ListPetsRequest } from "./api";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { NewPetResponse } from "./api";
import type { NewPetRequest } from "./api";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service proto.PetService
 */
export interface IPetServiceClient {
    /**
     * @generated from protobuf rpc: NewPet(proto.NewPetRequest) returns (proto.NewPetResponse);
     */
    newPet(input: NewPetRequest, options?: RpcOptions): UnaryCall<NewPetRequest, NewPetResponse>;
    /**
     * @generated from protobuf rpc: ListPets(proto.ListPetsRequest) returns (proto.ListPetsResponse);
     */
    listPets(input: ListPetsRequest, options?: RpcOptions): UnaryCall<ListPetsRequest, ListPetsResponse>;
    /**
     * @generated from protobuf rpc: CreateMeal(proto.CreateMealRequest) returns (proto.ListMealsResponse);
     */
    createMeal(input: CreateMealRequest, options?: RpcOptions): UnaryCall<CreateMealRequest, ListMealsResponse>;
    /**
     * @generated from protobuf rpc: GetMeals(proto.ListMealsRequest) returns (stream proto.Meal);
     */
    getMeals(input: ListMealsRequest, options?: RpcOptions): ServerStreamingCall<ListMealsRequest, Meal>;
}
/**
 * @generated from protobuf service proto.PetService
 */
export class PetServiceClient implements IPetServiceClient, ServiceInfo {
    typeName = PetService.typeName;
    methods = PetService.methods;
    options = PetService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: NewPet(proto.NewPetRequest) returns (proto.NewPetResponse);
     */
    newPet(input: NewPetRequest, options?: RpcOptions): UnaryCall<NewPetRequest, NewPetResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<NewPetRequest, NewPetResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListPets(proto.ListPetsRequest) returns (proto.ListPetsResponse);
     */
    listPets(input: ListPetsRequest, options?: RpcOptions): UnaryCall<ListPetsRequest, ListPetsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListPetsRequest, ListPetsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateMeal(proto.CreateMealRequest) returns (proto.ListMealsResponse);
     */
    createMeal(input: CreateMealRequest, options?: RpcOptions): UnaryCall<CreateMealRequest, ListMealsResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateMealRequest, ListMealsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetMeals(proto.ListMealsRequest) returns (stream proto.Meal);
     */
    getMeals(input: ListMealsRequest, options?: RpcOptions): ServerStreamingCall<ListMealsRequest, Meal> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListMealsRequest, Meal>("serverStreaming", this._transport, method, opt, input);
    }
}
/**
 * @generated from protobuf service proto.UserService
 */
export interface IUserServiceClient {
    /**
     * @generated from protobuf rpc: WhoAmI(google.protobuf.Empty) returns (proto.UserResponse);
     */
    whoAmI(input: Empty, options?: RpcOptions): UnaryCall<Empty, UserResponse>;
}
/**
 * @generated from protobuf service proto.UserService
 */
export class UserServiceClient implements IUserServiceClient, ServiceInfo {
    typeName = UserService.typeName;
    methods = UserService.methods;
    options = UserService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: WhoAmI(google.protobuf.Empty) returns (proto.UserResponse);
     */
    whoAmI(input: Empty, options?: RpcOptions): UnaryCall<Empty, UserResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, UserResponse>("unary", this._transport, method, opt, input);
    }
}
